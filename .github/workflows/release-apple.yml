name: Release (Apple)
on:
  release:
    types:
    - created
jobs:
  build:
    name: Build ${{ matrix.platform }} Release
    runs-on: macos-14
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
        - 
          destination: generic/platform=iOS
          platform: iOS
          rust-targets:
          - aarch64-apple-ios
        - destination: generic/platform=macOS
          platform: macOS
          rust-targets:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.0.app/Contents/Developer
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Import Certificate
      uses: ./.github/actions/import-cert
      with:
        certificate: ${{ secrets.DEVELOPER_CERT }}
        password: ${{ secrets.DEVELOPER_CERT_PASSWORD }}
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ join(matrix.rust-targets, ', ') }}
    - name: Configure Version
      id: version
      shell: bash
      run: echo "BUILD_NUMBER=$(Tools/version.sh)" >> $GITHUB_OUTPUT
    - name: Archive
      uses: ./.github/actions/archive
      with:
        scheme: App
        destination: ${{ matrix.destination }}
        app-store-key: ${{ secrets.APPSTORE_KEY }}
        app-store-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        app-store-key-issuer-id: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
        archive-path: Burrow.xcarchive
    - name: Export
      uses: ./.github/actions/export
      with:
        method: ${{ matrix.platform == 'macOS' && 'developer-id' || 'ad-hoc' }}
        destination: export
        app-store-key: ${{ secrets.APPSTORE_KEY }}
        app-store-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        app-store-key-issuer-id: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
        archive-path: Burrow.xcarchive
        export-path: Release
    - name: Notarize
      if: ${{ matrix.platform == 'macOS' }}
      uses: ./.github/actions/notarize
      with:
        app-store-key: ${{ secrets.APPSTORE_KEY }}
        app-store-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        app-store-key-issuer-id: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
    - name: Compress (iOS)
      if: ${{ matrix.platform == 'iOS' }}
      shell: bash
      run: |
        cp Apple/Release/Burrow.ipa Burrow.ipa
        aa archive -a lzma -b 8m -d Apple -subdir Burrow.xcarchive -o Burrow-${{ matrix.platform }}.xcarchive.aar
        rm -rf Apple/Release
    - name: Compress (macOS)
      if: ${{ matrix.platform == 'macOS' }}
      shell: bash
      run: |
        aa archive -a lzma -b 8m -d Apple/Release -subdir Burrow.app -o Burrow.app.aar
        aa archive -a lzma -b 8m -d Apple -subdir Burrow.xcarchive -o Burrow-${{ matrix.platform }}.xcarchive.aar
        rm -rf Apple/Release
    - name: Upload to GitHub
      uses: SierraSoftworks/gh-releases@v1.0.7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release_tag: ${{ github.ref_name }}
        overwrite: 'true'
        files: |
          ${{ matrix.platform == 'macOS' && 'Burrow.aap.aar' || 'Burrow.ipa' }}
          Burrow-${{ matrix.platform }}.xcarchive.aar
    - name: Upload to App Store Connect
      if: ${{ matrix.platform == 'iOS' }}
      uses: ./.github/actions/export
      with:
        method: app-store
        destination: upload
        app-store-key: ${{ secrets.APPSTORE_KEY }}
        app-store-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        app-store-key-issuer-id: ${{ secrets.APPSTORE_KEY_ISSUER_ID }}
        archive-path: Burrow.xcarchive
        export-path: Release
